# -*- coding: utf-8 -*-
import qrcode
from Addon import Addon, middelware, addon_init
from Template import str_back, str_error
import io

NotWork = 0
Start = 1


@addon_init(['!QRCODE', '!–ö–û–î'], 'üí†', True, 3)
class Qr(Addon):
    __slots__ = ()

    async def qrcode_gen(self, event):
        qr = qrcode.QRCode()
        qr.add_data(event.text)
        qr.make()

        img = qr.make_image(fill_color="black", back_color="white")
        byte_io = io.BytesIO()
        img.save(byte_io, 'PNG')
        await event.uploads(byte_io.getvalue())
        byte_io.close()
        return event

    @middelware
    async def mainapp(self, event):
        if self.isstep(NotWork, Start):
            return event.answer(f'{self.username}, –ø—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é QRcode.\n\n'
                                f'–ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫–æ–π:'
                                ).keyboard(str_back).attachment('photo-168691465_457243345')

        if self.isstep(Start):
            if not event.text:
                return event.answer(f'–Ø –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å QRcode —Ç–æ–ª—å–∫–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞... –ø—Ä–∏—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ,'
                                    f' –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏–ª–∏ —Å—Å—ã–ª–∫—É').keyboard(str_back)

            try:
                await self.qrcode_gen(event)
                return event.answer('–í–æ—Ç:').keyboard(str_back)
            except:
                return event.answer(str_error).keyboard(str_back)











# -*- coding: utf-8 -*-
from untils import subscribe, req, Event
from Addon import Addon, middelware, addon_init
from Template import str_back, str_error
import time
from lxml import etree

keyb = [str_back]
keyb1 = ['–ù–∞ –≤—á–µ—Ä–∞%b', '–ù–∞ –∑–∞–≤—Ç—Ä–∞%b', '–ù–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞%b', '–î—Ä—É–≥–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø%b', '–†–∞—Å—Å—ã–ª–∫–∞%g', str_back]
horo = ('\n1. –û–±—â–∏–π\n'
        '2. –≠—Ä–æ—Ç–∏—á–µ—Å–∫–∏–π\n'
        '3. –ê–Ω—Ç–∏–≥–æ—Ä–æ—Å–∫–æ–ø\n'
        '4. –ë–∏–∑–Ω–µ—Å\n'
        '5. –ó–¥–æ—Ä–æ–≤—å–µ\n'
        '6. –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π\n'
        '7. –õ—é–±–æ–≤–Ω—ã–π\n'
        '8. –ú–æ–±–∏–ª—å–Ω—ã–π\n')
horo_choise = {'1': 'com', '2': 'ero', '3': 'anti', '4': 'bus', '5': 'hea', '6': 'cook', '7': 'lov', '8': 'mob',
               '–æ–±—â–∏–π': 'com', '—ç—Ä–æ—Ç–∏—á–µ—Å–∫–∏–π': 'ero', '–∞–Ω—Ç–∏–≥–æ—Ä–æ—Å–∫–æ–ø': 'anti', '–±–∏–∑–Ω–µ—Å': 'bus',
               '–∑–¥–æ—Ä–æ–≤—å–µ': 'hea', '–∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π': 'cook', '–ª—é–±–æ–≤–Ω—ã–π': 'lov', '–º–æ–±–∏–ª—å–Ω—ã–π': 'mob'}
horo_choise_rev = {v: k for k, v in horo_choise.items()}
zodiac = ('\n1. –û–≤–µ–Ω\n'
          '2. –¢–µ–ª–µ—Ü\n'
          '3. –ë–ª–∏–∑–Ω–µ—Ü—ã\n'
          '4. –†–∞–∫\n'
          '5. –õ–µ–≤\n'
          '6. –î–µ–≤–∞\n'
          '7. –í–µ—Å—ã\n'
          '8. –°–∫–æ—Ä–ø–∏–æ–Ω\n'
          '9. –°—Ç—Ä–µ–ª–µ—Ü\n'
          '10. –ö–æ–∑–µ—Ä–æ–≥\n'
          '11. –í–æ–¥–æ–ª–µ–∏\n'
          '12. –†—ã–±—ã\n')
zodiac_choise = {'1': 'aries', '2': 'taurus', '3': 'gemini', '4': 'cancer',
                 '5': 'leo', '6': 'virgo', '7': 'libra', '8': 'scorpio', '9': 'sagittarius',
                 '10': 'capricorn', '11': 'aquarius', '12': 'pisces',
                 '–æ–≤–µ–Ω': 'aries', '—Ç–µ–ª–µ—Ü': 'taurus', '–±–ª–∏–∑–Ω–µ—Ü—ã': 'gemini', '—Ä–∞–∫': 'cancer',
                 '–ª–µ–≤': 'leo', '–¥–µ–≤–∞': 'virgo', '–≤–µ—Å—ã': 'libra', '—Å–∫–æ—Ä–ø–∏–æ–Ω': 'scorpio', '—Å—Ç—Ä–µ–ª–µ—Ü': 'sagittarius',
                 '–∫–æ–∑–µ—Ä–æ–≥': 'capricorn', '–≤–æ–¥–æ–ª–µ–∏': 'aquarius', '—Ä—ã–±—ã': 'pisces'}

zodiac_choise_rev = {v: k for k, v in zodiac_choise.items()}
horo_day = {'–Ω–∞ –≤—á–µ—Ä–∞': 'yesterday', '–Ω–∞ –∑–∞–≤—Ç—Ä–∞': 'tomorrow', '–Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞': 'tomorrow02'}


class horoscope_data:
    tim = 0
    data = {}


_msg1 = '–ù–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 8 –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞, –º–æ–∂–Ω–æ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º'
_msg2 = '–ù–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 12 –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–∞'
_msg3 = '–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –ø–∏—à–∏ - –î—Ä—É–≥–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –∏–ª–∏ –≤—ã–±–µ—Ä–∏ ' \
        '–≥–æ—Ä–æ—Å–∫–æ–ø –ù–∞ –≤—á–µ—Ä–∞, –ù–∞ –∑–∞–≤—Ç—Ä–∞, –ù–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞. –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ - –ù–∞–∑–∞–¥'


@addon_init(['!–ì–û–†–û–°–ö–û–ü'], 'üå†', True, 2)
class Goroscope(Addon):
    __slots__ = 'horos', 'zadiacs'

    def __init__(self, username, user_id):
        super(Goroscope, self).__init__(username, user_id)
        self.horos = ''
        self.zadiacs = ''

    def pars_xml(self, i, x):
        root = etree.fromstring(x)
        y = {}
        for appt in root.getchildren():
            x = {}
            for elem in appt.getchildren():
                if elem.text:
                    x[elem.tag] = elem.text
            if x:
                y[appt.tag] = x
        horoscope_data.data[i] = y

    async def get_horo(self):
        if time.time() - horoscope_data.tim > 3600 * 24:
            horoscope_data.tim = time.time()
            horoscope_data.data = {}

            title = ['com', 'ero', 'anti', 'bus', 'hea', 'cook', 'lov', 'mob']
            for i in title:
                url = f'https://ignio.com/r/export/utf/xml/daily/{i}.xml'
                x = await req.get(url)
                self.pars_xml(i, x)
            print(time.time() - horoscope_data.tim)
        return True

    async def get(self, txt: str) -> str:
        await self.get_horo()
        txt = txt.lower().split()
        a, b, c = '', '', ''
        if len(txt) == 2:
            a, b, c = txt[1], '', ''
        if len(txt) == 3:
            a, b, c = txt[1], txt[2], ''
        if len(txt) > 3:
            a, b, c = txt[1], txt[2], txt[3]

        x = horoscope_data.data[horo_choise.get(a, 'com')][zodiac_choise.get(b, 'aries')][horo_day.get(c, "today")]
        return x

    async def check(self, _dict: dict, event: Event) -> str:
        return _dict.get(await event.checker_text(event.text.lower()), 0)

    @middelware
    async def mainapp(self, event: Event) -> Event:
        event.is_can_edit_prev_msg = False

        if event.from_comment:
            return event.answer(await self.get(await event.checker_text(event.text.lower())))

        await self.get_horo()

        if event.check('–¥—Ä—É–≥–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø'):
            self.end()

        if self.isstep(0, 1):
            return event.answer(f'–ö–∞–∫–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –≤—ã–±–µ—Ä–µ—à—å?{horo}\n–ù–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É').keyboard(*keyb)

        if self.step > 0:
            if event.check('—Ä–∞—Å—Å—ã–ª–∫–∞'):
                return event.answer(f'–•–æ—á–µ—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤—ã—Ö –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –ø–æ'
                                    f' —Ç–µ–º–µ "{horo_choise_rev[self.horos].capitalize()}" –¥–ª—è '
                                    f'–∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ {zodiac_choise_rev[self.zadiacs].capitalize()}?\n'
                                    ).keyboard('–î–∞, –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è%g', '–û—Ç–∫–∞–∑–∞—Ç—å—Å—è%r', tablet=1)

            if event.check('–¥–∞, –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'):
                key = '–≥–æ—Ä–æ—Å–∫–æ–ø'
                command = f'{key} {horo_choise_rev[self.horos]} {zodiac_choise_rev[self.zadiacs]}'
                if subscribe.create(key, event, command):
                    return event.answer('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å —Ç–µ–±–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–≤–µ–∂–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. '
                                        '–ß—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –Ω–∞–ø–∏—à–∏ - –æ—Ç–ø–∏—Å–∫–∞ –≥–æ—Ä–æ—Å–∫–æ–ø'
                                        ).keyboard(*keyb1)
                else:
                    return event.answer(str_error)

            if event.check('–æ—Ç–∫–∞–∑–∞—Ç—å—Å—è'):
                return event.answer('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞').keyboard(*keyb1)

        if self.isstep(1):
            try:
                self.horos = await self.check(horo_choise, event)
                if self.horos:
                    self.setstep(2)
                    return event.answer(f'–í—ã–±–µ—Ä–∏ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞{zodiac}\n–ù–∞–ø–∏—à–∏ —Ü–∏—Ñ—Ä—É –∏–ª–∏ '
                                        f'–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞, –º–æ–∂–Ω–æ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º').keyboard(*keyb)
                else:
                    return event.answer(_msg1).keyboard(*keyb)
            except:
                return event.answer(_msg1).keyboard(*keyb)

        if self.isstep(2):
            try:
                self.zadiacs = await self.check(zodiac_choise, event)
                if self.zadiacs:
                    self.setstep(3)
                    return event.answer(
                        f'–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{horoscope_data.data[self.horos][self.zadiacs]["today"]}'
                                        ).keyboard(*keyb1)
                else:
                    return event.answer(_msg2).keyboard(*keyb)
            except:
                return event.answer(_msg2).keyboard(*keyb)

        if self.isstep(3):
            d = await self.check(horo_day, event)
            if d:
                return event.answer(f'–ì–æ—Ä–æ—Å–∫–æ–ø {event.text.lower()}:\n'
                                    f'{horoscope_data.data[self.horos][self.zadiacs][d]}'
                                    ).keyboard(*keyb1)
            else:
                return event.answer(_msg3).keyboard(*keyb1)

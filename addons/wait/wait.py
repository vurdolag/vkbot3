# -*- coding: utf-8 -*-
import time
from untils import subscribe, Event
from Addon import Addon, middelware, addon_init
from Template import str_back
import recompile as rec

NotWork = 0
CreateMsg = 1
SetTime = 2

_msg1 = '‚ùó –û–ø–∞–Ω—å–∫–∏... üòÅ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å, —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ - –¥–µ–Ω—å –º–µ—Å—è—Ü –≥–æ–¥ —á–∞—Å –º–∏–Ω—É—Ç–∞'


@addon_init(['!–ù–ê–ü–û–ú–ù–ò'], 'üí≠', False, 3)
class Wait(Addon):
    __slots__ = 'time_msg'

    def __init__(self, username, user_id):
        super(Wait, self).__init__(username, user_id)
        self.time_msg = ''

    def msg_send(self, event: Event, tim) -> Event:
        subscribe.create('only_send', event, self.time_msg, global_t=int(time.time()) + tim)

        self.setstep(CreateMsg)
        return event.answer(f'–û—Ç–ª–∏—á–Ω–æ! –ß–µ—Ä–µ–∑ {event.text} –æ—Ç–ø—Ä–∞–≤–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ - {self.time_msg}\n\n'
                            '–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ '
                            '!–ù–ê–ó–ê–î –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–π—Ç–∏.')

    def check(self, event: Event) -> Event:
        t = -1

        if event.check('5 –º–∏–Ω—É—Ç'):
            t = 60 * 5

        elif event.check('15 –ú–ò–ù–£–¢'):
            t = 60 * 15

        elif event.check('30 –ú–ò–ù–£–¢'):
            t = 60 * 30

        elif event.check('1 –ß–ê–°'):
            t = 60 * 60

        try:
            if event.check('—á–∞—Å'):
                tim = rec.d.sub('', event.text)
                if tim:
                    t = 60 * 60 * int(tim)

            if event.check('–º–∏–Ω—É—Ç'):
                tim = rec.d.sub('', event.text)
                if tim:
                    t = 60 * int(tim)

            if event.check('—Å–µ–∫—É–Ω–¥'):
                tim = rec.d.sub('', event.text)
                if tim:
                    t = int(tim)
        except:
            pass

        if t != -1:
            return self.msg_send(event, t)

    def get_time_str(self, t):
        time_str = '{–≠–º–º–º —Ç–∞–∫–æ–≥–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å}'

        if t < 3600:
            time_str = f'{t // 60} –º–∏–Ω—É—Ç'

        elif 3600 < t < 3600 * 24:
            time_str = (f'{t // 3600} —á–∞—Å–æ–≤ '
                        f'{t % 3600 // 60} –º–∏–Ω—É—Ç')

        elif t > 3600 * 24:
            time_str = (f'{t // (3600 * 24)} –¥–Ω–µ–π '
                        f'{t % (3600 * 24) // 3600} —á–∞—Å–æ–≤ '
                        f'{t % (3600 * 24) % 3600 // 60} –º–∏–Ω—É—Ç')
        return time_str

    def str_to_time(self, a):
        try:
            b = time.strptime(' '.join(a), '%d %m %y %H %M')
        except:
            b = time.strptime(' '.join(a), '%d %m %Y %H %M')

        return int(time.mktime(b) - time.time()) - 3600 * 3

    def hello(self, event: Event) -> Event:
        if self.isstep(NotWork, CreateMsg):
            return event.answer(f'{self.username}, —è –Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞, –º–æ–≥—É –æ—Ç—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, '
                                f'—á—Ç–æ–±—ã —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ {event.gender("–∑–∞–±—ã–ª", "–∑–∞–±—ã–ª–∞")}. –û —á–µ–º –Ω–∞–ø–æ–º–Ω–∏—Ç—å?\n\n'
                                '–ù–∞–ø–∏—à–∏ –≤–Ω–∞—á–∞–ª–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –∞ —Å–ª–µ–¥—É—é—â–∏–º c–æ–æ–±—â–µ–Ω–∏–µ–º –≤—Ä–µ–º—è.\n\n'
                                '–ü—Ä–∏–º–µ—Ä: –•–≤–∞—Ç–∏—Ç —Å–ø–∞—Ç—å, –∏–¥–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É').keyboard(str_back)

        if self.isstep(CreateMsg, SetTime):
            self.time_msg = '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:\n\n' + event.text
            return event.answer('–•–æ—Ä–æ—à–æ!\n–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ –≤—Ä–µ–º—è –∫–æ–≥–¥–∞ –Ω–∞–ø–æ–º–Ω–∏—Ç—å.\n\n'
                                '–ü—Ä–∏–º–µ—Ä: 11 11 19 08 30\n\n–¥–µ–Ω—å –º–µ—Å—è—Ü –≥–æ–¥ —á–∞—Å –º–∏–Ω—É—Ç–∞\n\n'
                                '–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —á–∞—Å –∏ –º—É–Ω—É—Ç—ã —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è'
                                ).keyboard('5 –ú–ò–ù–£–¢%b', '15 –ú–ò–ù–£–¢%b',
                                           '30 –ú–ò–ù–£–¢%b', '1 –ß–ê–°%b', str_back)

    @middelware
    async def mainapp(self, event: Event) -> Event:
        message = event.text.upper()

        if self.hello(event):
            return event

        if self.isstep(SetTime):
            event.keyboard(str_back)

            if self.check(event):
                return event

            a = message.split()

            if len(a) == 2:
                g = time.strftime("%d %m %y %H %M", time.localtime()).split()[:3]
                try:
                    b = time.strptime(message, '%H %M')

                except ValueError:
                    return event.answer(_msg1)

                a = (' '.join(g) + ' ' + str(b[3]) + ' ' + str(b[4])).split()

            if len(a) != 5:
                return event.answer(_msg1)

            t = self.str_to_time(a)

            if t < 0:
                return event.answer(f'‚ùó –û–ø–∞–Ω—å–∫–∏... üòÅ –æ—à–∏–±–∫–∞, —Ç—ã –≤–≤–µ–ª{event.gender("","–∞")}'
                                    f' –¥–∞—Ç—É –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–π, –≤ –ø—Ä–æ—à–ª–æ–µ —è –Ω–∞–ø–æ–º–Ω–∏—Ç—å –Ω–µ –º–æ–≥—É üòü')

            event.text = self.get_time_str(t)

            return self.msg_send(event, t)






















